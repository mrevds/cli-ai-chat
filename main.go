package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"

	"clids/aimlapi"
	"clids/utils"
)

func main() {
	// –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
	apiKey := os.Getenv("AIMLAPI_KEY")
	if apiKey == "" {
		utils.PrintError(fmt.Errorf("–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è AIMLAPI_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"))
		return
	}

	// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
	client := aimlapi.NewAIMLAPIClient(apiKey)
	model := "gpt-4o"

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
	messages := []aimlapi.Message{
		{
			Role:    "system",
			Content: "–¢—ã –ø–æ–ª–µ–∑–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.",
		},
	}

	// –°–æ–∑–¥–∞–µ–º reader –¥–ª—è –≤–≤–æ–¥–∞
	reader := bufio.NewReader(os.Stdin)

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä
	utils.PrintBanner()
	utils.PrintInfo(fmt.Sprintf("–ú–æ–¥–µ–ª—å: %s", model))
	utils.PrintInfo("–í–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞, 'clear' –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏, 'help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
	utils.PrintSeparator()

	for {
		utils.PrintPrompt()
		input, err := reader.ReadString('\n')
		if err != nil {
			utils.PrintError(err)
			continue
		}

		input = strings.TrimSpace(input)
		if input == "" {
			continue
		}

		// –ö–æ–º–∞–Ω–¥–∞ –≤—ã—Ö–æ–¥–∞
		if strings.ToLower(input) == "exit" {
			utils.PrintSuccess("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
			break
		}

		// –ö–æ–º–∞–Ω–¥–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
		if strings.ToLower(input) == "clear" {
			messages = []aimlapi.Message{{
				Role:    "system",
				Content: "–¢—ã –ø–æ–ª–µ–∑–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.",
			}}
			utils.PrintSuccess("–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞")
			continue
		}

		// –ö–æ–º–∞–Ω–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
		if strings.ToLower(input) == "help" {
			utils.PrintInfo("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
			fmt.Println("  exit  - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
			fmt.Println("  clear - –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞")
			fmt.Println("  help  - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
			fmt.Println()
			continue
		}

		// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
		messages = append(messages, aimlapi.Message{
			Role:    "user",
			Content: input,
		})

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
		fmt.Printf("%s%süîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...%s\r", utils.ColorYellow, utils.ColorBold, utils.ColorReset)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
		response, err := client.Chat(model, messages)

		// –û—á–∏—â–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
		fmt.Print(strings.Repeat(" ", 30) + "\r")

		if err != nil {
			utils.PrintError(err)
			continue
		}

		// –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
		messages = append(messages, aimlapi.Message{
			Role:    "assistant",
			Content: response,
		})

		// –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç
		utils.PrintResponse(response)
	}
}
